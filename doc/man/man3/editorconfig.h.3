.TH "editorconfig.h" 3 "Tue Nov 22 2011" "EditorConfig" \" -*- nroff -*-
.ad l
.nh
.SH NAME
editorconfig.h \- 
.PP
Header file of EditorConfig.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBeditorconfig_name_value\fP"
.br
.RI "\fIA structure containing a name and its corresponding value. \fP"
.ti -1c
.RI "struct \fBeditorconfig_parsing_out\fP"
.br
.RI "\fIA structure that contains the parsing result. \fP"
.ti -1c
.RI "struct \fBeditorconfig_parsing_info\fP"
.br
.RI "\fIA structure that contains the parsing information which should be provided before parsing. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBeditorconfig_init_parsing_info\fP (struct \fBeditorconfig_parsing_info\fP *info)"
.br
.RI "\fIInitialize an \fBeditorconfig_parsing_info\fP structure with default values. \fP"
.ti -1c
.RI "int \fBeditorconfig_parse\fP (const char *full_filename, struct \fBeditorconfig_parsing_out\fP *out, struct \fBeditorconfig_parsing_info\fP *info)"
.br
.RI "\fIParse editorconfig files corresponding to the file path given by full_filename, and put the result to 'out'. \fP"
.ti -1c
.RI "const char * \fBeditorconfig_is_standard_conformed\fP (const struct \fBeditorconfig_parsing_out\fP *epo)"
.br
.RI "\fICheck whether the parsing result of editorconfig files conforms to the standard. \fP"
.ti -1c
.RI "int \fBeditorconfig_parsing_out_clear\fP (struct \fBeditorconfig_parsing_out\fP *epo)"
.br
.RI "\fIClear the \fBeditorconfig_parsing_out\fP structure after a success call of editorconfig_parse. \fP"
.ti -1c
.RI "void \fBeditorconfig_get_version\fP (int *major, int *minor, int *subminor)"
.br
.RI "\fIGet the version number of EditorConfig. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Header file of EditorConfig. 

\fBVersion:\fP
.RS 4
0.2.0 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void editorconfig_get_version (int *major, int *minor, int *subminor)"
.PP
Get the version number of EditorConfig. An example is available at src/bin/main.c in EditorConfig source code.
.PP
\fBParameters:\fP
.RS 4
\fImajor\fP If not null, the integer pointed by major will be filled with the major version of EditorConfig.
.br
\fIminor\fP If not null, the integer pointed by minor will be filled with the minor version of EditorConfig.
.br
\fIsubminor\fP If not null, the integer pointed by subminor will be filled with the subminor version of EditorConfig.
.RE
.PP
\fBReturns:\fP
.RS 4
None. 
.RE
.PP

.SS "void editorconfig_init_parsing_info (struct \fBeditorconfig_parsing_info\fP *info)"
.PP
Initialize an \fBeditorconfig_parsing_info\fP structure with default values. \fBParameters:\fP
.RS 4
\fIinfo\fP The \fBeditorconfig_parsing_info\fP structure to be initialized.
.RE
.PP
\fBReturns:\fP
.RS 4
None. 
.RE
.PP

.SS "const char* editorconfig_is_standard_conformed (const struct \fBeditorconfig_parsing_out\fP *epo)"
.PP
Check whether the parsing result of editorconfig files conforms to the standard. \fBParameters:\fP
.RS 4
\fIepo\fP The \fBeditorconfig_parsing_out\fP structure containing the parsing result to be checked.
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINULL\fP The parsing result of editorconfig files conforms to the standard.
.br
\fInon-NULL\fP The parsing result of editorconfig files does not conform to the standard. The return value is a pointer to the error message. 
.RE
.PP

.SS "int editorconfig_parse (const char *full_filename, struct \fBeditorconfig_parsing_out\fP *out, struct \fBeditorconfig_parsing_info\fP *info)"
.PP
Parse editorconfig files corresponding to the file path given by full_filename, and put the result to 'out'. An example is available at src/bin/main.c in editorconfig source code.
.PP
\fBParameters:\fP
.RS 4
\fIfull_filename\fP The full path of a file that is edited by the editor for which the parsing result is.
.br
\fIout\fP The parsing result will be filled in out, which is a \fBeditorconfig_parsing_out\fP structure. This structure needs to be cleared by editorconfig_parsing_out_clear if this function succeeds.
.br
\fIinfo\fP The parsing information to be used and returned from this function. Could be NULL if you want to use the default value and you do not want to get any information back; if you want to use the default value and you also want the output information, you could use editorconfig_init_parsing_info to initialize an \fBeditorconfig_parsing_info\fP structure and pass the address as this parameter.
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI0\fP Everything is OK;
.br
\fI-2\fP The full_filename is not a full path name;
.br
\fI-3\fP A memory error occurs;
.br
\fI>0\fP A parsing error occurs. The return value would be the line number of parsing error. If err_file is not NULL, err_file will also be filled with the file path that caused the parsing error. 
.RE
.PP

.SS "int editorconfig_parsing_out_clear (struct \fBeditorconfig_parsing_out\fP *epo)"
.PP
Clear the \fBeditorconfig_parsing_out\fP structure after a success call of editorconfig_parse. An example is available at src/bin/main.c in editorconfig source code.
.PP
\fBParameters:\fP
.RS 4
\fIepo\fP The \fBeditorconfig_parsing_out\fP structure to be cleared.
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIzero\fP Everything is OK 
.br
\fInon-zero\fP Some error occured.
.RE
.PP
\fBNote:\fP
.RS 4
Currently this function always returns 0, but please make a return value checking to make the code compatible with future versions. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for EditorConfig from the source code.
