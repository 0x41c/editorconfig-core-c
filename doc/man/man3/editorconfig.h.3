.TH "editorconfig.h" 3 "Sat Nov 5 2011" "EditorConfig" \" -*- nroff -*-
.ad l
.nh
.SH NAME
editorconfig.h \- 
.PP
Header file of EditorConfig.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBeditorconfig_name_value\fP"
.br
.RI "\fIA structure containing a name and its corresponding value. \fP"
.ti -1c
.RI "struct \fBeditorconfig_parsing_out\fP"
.br
.RI "\fIA structure that contains the parsing result. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBeditorconfig_parse\fP (const char *full_filename, struct \fBeditorconfig_parsing_out\fP *out, char **err_file)"
.br
.RI "\fIParse editorconfig files corresponding to the file path given by full_filename, and put the result to 'out'. \fP"
.ti -1c
.RI "int \fBeditorconfig_parsing_out_clear\fP (struct \fBeditorconfig_parsing_out\fP *epo)"
.br
.RI "\fIClear the \fBeditorconfig_parsing_out\fP structure after a success call of editorconfig_parse. \fP"
.ti -1c
.RI "void \fBeditorconfig_get_version\fP (int *major, int *minor, int *subminor)"
.br
.RI "\fIGet the version number of EditorConfig. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Header file of EditorConfig. 

\fBVersion:\fP
.RS 4
0.2.0 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void editorconfig_get_version (int *major, int *minor, int *subminor)"
.PP
Get the version number of EditorConfig. An example is available at src/bin/main.c in EditorConfig source code.
.PP
\fBParameters:\fP
.RS 4
\fImajor\fP If not null, the integer pointed by major will be filled with the major version of EditorConfig.
.br
\fIminor\fP If not null, the integer pointed by minor will be filled with the minor version of EditorConfig.
.br
\fIsubminor\fP If not null, the integer pointed by subminor will be filled with the subminor version of EditorConfig.
.RE
.PP
\fBReturns:\fP
.RS 4
None. 
.RE
.PP

.SS "int editorconfig_parse (const char *full_filename, struct \fBeditorconfig_parsing_out\fP *out, char **err_file)"
.PP
Parse editorconfig files corresponding to the file path given by full_filename, and put the result to 'out'. An example is available at src/bin/main.c in editorconfig source code.
.PP
\fBParameters:\fP
.RS 4
\fIfull_filename\fP The full path of a file that is edited by the editor for which the parsing result is.
.br
\fIout\fP The parsing result will be filled in out, which is a \fBeditorconfig_parsing_out\fP structure. This structure needs to be cleared by editorconfig_parsing_out_clear if this function succeeds.
.br
\fIerr_file\fP When a parsing error occured, this will point to a file that caused the parsing error.
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI0\fP Everything is OK;
.br
\fI-2\fP The full_filename is not a full path name;
.br
\fI-3\fP A memory error occurs;
.br
\fI>0\fP A parsing error occurs. The return value would be the line number of parsing error. If err_file is not NULL, err_file will also be filled with the file path that caused the parsing error. 
.RE
.PP

.SS "int editorconfig_parsing_out_clear (struct \fBeditorconfig_parsing_out\fP *epo)"
.PP
Clear the \fBeditorconfig_parsing_out\fP structure after a success call of editorconfig_parse. An example is available at src/bin/main.c in editorconfig source code.
.PP
\fBParameters:\fP
.RS 4
\fIepo\fP The \fBeditorconfig_parsing_out\fP structure to be cleared.
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIzero\fP Everything is OK 
.br
\fInon-zero\fP Some error occured.
.RE
.PP
\fBNote:\fP
.RS 4
Currently this function always returns 0, but please make a return value checking to make the code compatible with future versions. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for EditorConfig from the source code.
